{
	"credit": "Made with Blockbench",
	"textureSize": [64, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{
					"coordinates": [-4, 24, -4, 8, 8, 8],
					"uvNorth": [8, 8, 16, 16],
					"uvEast": [0, 8, 8, 16],
					"uvSouth": [24, 8, 32, 16],
					"uvWest": [16, 8, 24, 16],
					"uvUp": [16, 8, 8, 0],
					"uvDown": [24, 0, 16, 8]
				}
			],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0],
					"submodels": [
						{
							"id": "Adapted_for_player_by_Traben",
							"invertAxis": "xy",
							"translate": [0, 0, 0],
							"submodels": [
								{
									"id": "Base_pack_by_BoZo_Xo2_n_CoolRanchChris",
									"invertAxis": "xy",
									"translate": [0, 0, 0],
									"submodels": [
										{
											"id": "Animations_edited_by_Ithan",
											"invertAxis": "xy",
											"translate": [0, 0, 0]
										}
									]
								}
							]
						}
					]
				}
			],
			"animations": [
				{
					"var.BOOLEAN_TO_INTEGER_ALSO_USED_FOR_ELYTRA_N_CAPE_MODELS": "1"
				},
				{
					"var.player_sprinting": " if(is_sprinting ,1 ,0 )",
					"var.player_sneaking": "  if(is_sneaking  ,1 ,0 )",
					"var.player_swimming": "  if(is_swimming  ,1 ,0 )",
					"var.player_crawling": "  if(is_crawling  ,1 ,0 )",
					"var.player_gliding": "   if(is_gliding   ,1 ,0 )",
					"var.player_climbing": "  if(is_climbing  ,1 ,0 )"
				},
				{
					"var.BOOLEANS_FOR_SPECIAL_ACTION_DETECION": "1"
				},
				{
					"varb.is_on_land": "          is_on_ground && !is_in_water",
					"varb.is_airborne": "        !is_on_ground && !is_in_water",
					"varb.is_sleeping": "         is_riding && between(right_leg.ry,torad(-0.05),torad(0.05)) && between(left_leg.ry,torad(-0.05),torad(0.05)) && between(right_leg.rz,torad(-0.05),torad(0.05)) && between(left_leg.rz,torad(-0.05),torad(0.05))",
					"varb.is_aiming_crossbow": "  equals(left_arm.ry - torad(40), right_arm.ry + torad(40), torad(30))",
					"varb.personality_sit": "     varb.is_on_land && !is_riding && (limb_speed < 0.15) && between(right_leg.rx,torad(-81.1),torad(-45)) && between(left_leg.rx,torad(-81.1),torad(-45)) && between(right_leg.ry,torad(12),torad(18.01)) && between(left_leg.ry,torad(-18.01),torad(-12)) && between(right_leg.rz,torad(2),torad(4.51)) && between(left_leg.rz,torad(-4.51),torad(-2))",
					"varb.is_sitting": "          (is_riding || varb.personality_sit) && !varb.is_sleeping",
					"varb.is_parcool_sliding": "  varb.is_on_land  && is_crawling && between(right_arm.rx,torad(42),torad(55)) && (between(left_arm.rx,torad(17),torad(27)) &&  between(left_arm.rz,torad(-110),torad(-95)))",
					"varb.is_parcool_diving": "   varb.is_airborne && (between(right_arm.rz,torad(130),torad(205))) && (between(left_arm.rz,torad(-205),torad(-130)))",
					"varb.is_parcool_skydiving": "varb.is_airborne && (between(right_arm.rx,torad(7),torad(33)) && between(right_arm.rz,torad(39),torad(107))) && (between(left_arm.rx,torad(7),torad(33)) && between(left_arm.rz,torad(-107),torad(-39)))",
					"varb.has_raised_hands": "    varb.is_airborne && !is_riding && !varb.is_aiming_crossbow && ((wraprad(right_arm.rx) < -torad(75)) && ((wraprad(left_arm.rx)) < -torad(75)))"
				},
				{
					"varb.special_state": "is_sneaking || is_crawling || is_gliding || varb.is_sitting || varb.is_sleeping",
					"varb.is_parcooling": "varb.is_parcool_sliding || varb.is_parcool_diving || varb.is_parcool_skydiving",
					"varb.use_vanilla_leg_animations": "varb.has_raised_hands || is_gliding || varb.is_parcooling || (is_climbing && !is_on_ground)",
					"var.stop_animation_overlap": "  if(limb_speed > 0.01 || varb.special_state, 0, 1)",
					"var.cancel_if_swimming": "      if(is_swimming && is_in_water, 0, 1)",
					"var.limb_speed_attenuation": "  if(varb.has_raised_hands || varb.is_parcooling || is_gliding || (is_climbing && !is_on_ground), 0.025, is_swimming && is_in_water, 0.3, 1)",
					"var.limb_speed": "limb_speed * var.limb_speed_attenuation"
				},
				{
					"var.r": " 2 * pi * random(id)",
					"var.b": " age / ((11 - random(id) * 2) * if(varb.is_sleeping, 1.5, 1))",
					"var.breathe": "var.r + var.b",
					"var.ls": " limb_swing * 0.6662 + pi/2",
					"var.swim": " limb_swing / 2 + age / 4",
					"var.walk": " clamp( var.limb_speed * 6, 0, 1) * clamp( 2 - var.limb_speed * 3, 0, 1)",
					"var.ylook": "clamp( sin( var.r + age/60 ) * 6   , 0, 1) * 1.2",
					"var.nov1": " clamp(-5.6 + cos(-pi/6 + var.r + age/80)   *  6, 0, 1) * clamp(2-var.limb_speed*4, 0, 1)",
					"var.nov2": " clamp( -39 + cos(-pi/4 + var.r + var.b/20) * 40, 0, 1) * clamp(1-var.limb_speed*2, 0, 1)"
				},
				{
					"var.VARIABLE_ABBREVIATIONS": "1"
				},
				{
					"varb.UVLA": "varb.use_vanilla_leg_animations",
					"varb.IFPH": "is_first_person_hand",
					"var.SAO": "var.stop_animation_overlap",
					"var.CIS": "var.cancel_if_swimming"
				},
				{
					"var.LIMBS_ANIMATIONS": "1"
				},
				{
					"head.ty": " 0.25 + if(is_sneaking, 4.5, 0)                                                       + ( 1*var.player_sprinting)*var.limb_speed + var.limb_speed*var.walk - var.CIS*sin(torad(if(var.limb_speed>0.5, -45, 45))+var.ls*2)*var.limb_speed +sin(var.breathe)/6 +( cos(var.breathe +sin(var.breathe)*1.5)/2 +0.5 )*var.nov2 ",
					"head.tz": "        if(is_sneaking,  -4, 0) + if(is_crawling,-2.5,0) + if(varb.is_sleeping, -1.5, 0) + (-2*var.player_sprinting)*var.limb_speed - sin(var.breathe)/6     - var.CIS*cos(var.ls*2)/2*clamp(var.limb_speed*3, 0, 1) + (sin(limb_swing/2) +2)*if(is_hurt, - sin(hurt_time*pi/5)/6*hurt_time, 0)  + 1*(1-var.CIS) ",
					"head.rx": " if(varb.is_sleeping, clamp((head.rx),torad(0),torad(0)), clamp((head.rx),torad(-80),torad(80))    )",
					"head.ry": " wraprad(head.ry)"
				},
				{
					"body.tx": "head.tx",
					"body.ty": "head.ty + if(is_sneaking,-1.25, 0)",
					"body.tz": "head.tz + if(is_sneaking,  0.5, 0)",
					"body.rx": "torad(-2) + if(is_sneaking, torad(40), 0) + (torad(20)*var.player_sprinting)*var.limb_speed - torad(0.5)*sin(var.breathe) + cos(var.ls*2)/18*var.limb_speed + torad(-2.5)*clamp(1-var.limb_speed*2, 0, 1) + (cos(var.breathe +sin(var.breathe))/12 )*var.nov2 -  (sin(limb_swing/2)/2 +torad(20))/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) ",
					"body.ry": "body.ry + if(is_sprinting, torad(1), is_sneaking, torad(0), torad(6.5))*cos(var.ls + torad(30))*var.limb_speed  "
				},
				{
					"right_arm.tx": " if(varb.IFPH, right_arm.tx, body.tx - 5 + 5*(1-cos(body.ry))  )",
					"left_arm.tx": "  if(varb.IFPH,  left_arm.tx, body.tx + 5 - 5*(1-cos(body.ry))  )",
					"right_arm.ty": " if(varb.IFPH, right_arm.ty, body.ty + 2                       )",
					"left_arm.ty": "  if(varb.IFPH,  left_arm.ty, body.ty + 2                       )",
					"right_arm.tz": " if(varb.IFPH, right_arm.tz, body.tz + 5 - 5*(1-sin(body.ry))  )",
					"left_arm.tz": "  if(varb.IFPH,  left_arm.tz, body.tz - 5 + 5*(1-sin(body.ry))  )",
					"right_arm.rx": " if(varb.IFPH, right_arm.rx, wraprad(right_arm.rx)             )",
					"left_arm.rx": "  if(varb.IFPH,  left_arm.rx, wraprad( left_arm.rx)             )",
					"right_arm.ry": " if(varb.IFPH, right_arm.ry,                                                                      torad( -10)*limb_speed*(var.player_sprinting) + wraprad(right_arm.ry)  )",
					"left_arm.ry": "  if(varb.IFPH,  left_arm.ry,                                                                      torad(  10)*limb_speed*(var.player_sprinting) + wraprad( left_arm.ry)  )",
					"right_arm.rz": " if(varb.IFPH, right_arm.rz, if(is_sneaking, torad( 5), 0) + if(varb.is_sleeping, torad( 5), 0) + torad( 7.5)*limb_speed*(var.player_sprinting) + wraprad(right_arm.rz)  )",
					"left_arm.rz": "  if(varb.IFPH,  left_arm.rz, if(is_sneaking, torad(-5), 0) + if(varb.is_sleeping, torad(-5), 0) + torad(-7.5)*limb_speed*(var.player_sprinting) + wraprad( left_arm.rz)  )"
				},
				{
					"right_leg.tx": "-1.9 + if(is_sneaking,    0, 0) + clamp(-0.1 + var.limb_speed, -0.1, 0  )  ",
					"left_leg.tx": "  1.9 + if(is_sneaking,    0, 0) + clamp( 0.1 - var.limb_speed,  0  , 0.1)  ",
					"right_leg.ty": " 0.1 + if(is_sneaking,   -2, 0) + clamp(12 + cos(if(var.limb_speed >= 0.6, torad(-30), 0)+var.ls)*2*clamp(var.limb_speed*2, 0, 2)                                 + clamp(-1+var.limb_speed*1.5, 0, 1) , 0, 12.2) + if(varb.is_sitting, -1, 0) + clamp( (-sin(var.ls) +body.ty)* clamp(-cos(var.limb_speed*pi), 0, 1), -4, 0)",
					"left_leg.ty": "  0.1 + if(is_sneaking,   -2, 0) + clamp(12 - cos(if(var.limb_speed >= 0.6, torad(-30), 0)+var.ls)*2*clamp(var.limb_speed*2, 0, 2)                                 + clamp(-1+var.limb_speed*1.5, 0, 1) , 0, 12.2) + if(varb.is_sitting, -1, 0) + clamp( ( sin(var.ls) +body.ty)* clamp(-cos(var.limb_speed*pi), 0, 1), -4, 0)",
					"right_leg.tz": "                             if(varb.is_sitting,          -2, -0.1 + if(varb.is_sleeping, -1.5, 0) + if(is_crawling, -3,0) + 12*sin(torad(-1))*sin(var.breathe) + if(is_sneaking, clamp(  12*sin(torad(7.5)) - var.limb_speed*2, 0, 12*sin(torad(-7.5))), 0)           + if(is_sprinting, clamp(-1.5+var.limb_speed*6, -1.5, 0), clamp(-1.5+var.limb_speed*2, -1.5, -0.5)) )  + clamp(3 + 6*cos(var.ls)*clamp(var.limb_speed*2, 0, 1), -6, 1)*if(is_sprinting,1.2,0.75)       ",
					"left_leg.tz": "                              if(varb.is_sitting,          -2, -0.1 + if(varb.is_sleeping, -1.5, 0) + if(is_crawling, -3,0) + 12*sin(torad(-1))*sin(var.breathe) + if(is_sneaking, clamp(  12*sin(torad(7.5)) - var.limb_speed*2, 0, 12*sin(torad(-7.5))), 0)           + if(is_sprinting, clamp(-1.5+var.limb_speed*6, -1.5, 0), clamp(-1.5+var.limb_speed*2, -1.5, -0.5)) )  + clamp(3 - 6*cos(var.ls)*clamp(var.limb_speed*2, 0, 1), -6, 1)*if(is_sprinting,1.2,0.75)       ",
					"right_leg.rx": " if(varb.UVLA, right_leg.rx, if(varb.is_sitting, torad( -81), right_leg.rx*var.SAO + torad(2) +                              torad(1) *sin(var.breathe) + if(is_sneaking, clamp(torad(7.5) - torad(7.5)*var.limb_speed*6, 0, torad(7.5)), 0) + ( sin(var.ls)*if(is_sprinting, torad(55), is_sneaking, torad(75), torad(45)) + if(is_sprinting, torad(15), is_sneaking, torad( 2.5), torad( 0)))*var.limb_speed))",
					"left_leg.rx": "  if(varb.UVLA,  left_leg.rx, if(varb.is_sitting, torad( -81),  left_leg.rx*var.SAO + torad(2) +                              torad(1) *sin(var.breathe) + if(is_sneaking, clamp(torad(7.5) - torad(7.5)*var.limb_speed*6, 0, torad(7.5)), 0) + (-sin(var.ls)*if(is_sprinting, torad(55), is_sneaking, torad(75), torad(45)) + if(is_sprinting, torad(15), is_sneaking, torad( 2.5), torad( 0)))*var.limb_speed))",
					"right_leg.ry": " if(varb.UVLA, right_leg.ry, if(varb.is_sitting, torad(  18), right_leg.ry*var.SAO   ))",
					"left_leg.ry": "  if(varb.UVLA,  left_leg.ry, if(varb.is_sitting, torad( -18),  left_leg.ry*var.SAO   ))",
					"right_leg.rz": " if(varb.UVLA, right_leg.rz, if(varb.is_sitting, torad( 4.5), right_leg.rz*var.SAO + if(is_sneaking, torad(0), 0) + clamp(torad( 1) - var.limb_speed, 0, torad( 1)) + torad(1) + if(varb.is_sleeping, torad( 2.5), 0))  )",
					"left_leg.rz": "  if(varb.UVLA,  left_leg.rz, if(varb.is_sitting, torad(-4.5),  left_leg.rz*var.SAO + if(is_sneaking, torad(0), 0) + clamp(torad(-1) + var.limb_speed, torad(-1), 0) + torad(1) + if(varb.is_sleeping, torad(-2.5), 0))  )"
				},
				{
					"var.COMMON_VARIABLES_FOR_ELYTRA_CAPE_N_BODY_SYNC": "1"
				},
				{
					"var.player_body_tx": "body.tx",
					"var.player_body_ty": "body.ty",
					"var.player_body_tz": "body.tz",
					"var.player_body_rx": "body.rx",
					"var.player_body_ry": "body.ry",
					"var.player_body_rz": "body.rz",
					"var.player_limb_speed": "var.limb_speed",
					"var.player_move_foward": "move_forward",
					"var.player_move_strafing": "move_strafing"
				}
			]
		},
		{
			"part": "headwear",
			"id": "headwear",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{
					"coordinates": [-4.5, 23.5, -4.5, 9, 9, 9],
					"uvNorth": [40, 8, 48, 16],
					"uvEast": [32, 8, 40, 16],
					"uvSouth": [56, 8, 64, 16],
					"uvWest": [48, 8, 56, 16],
					"uvUp": [48, 8, 40, 0],
					"uvDown": [56, 0, 48, 8]
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{
					"coordinates": [-4, 12, -2, 8, 12, 4],
					"uvNorth": [20, 20, 28, 32],
					"uvEast": [16, 20, 20, 32],
					"uvSouth": [32, 20, 40, 32],
					"uvWest": [28, 20, 32, 32],
					"uvUp": [28, 20, 20, 16],
					"uvDown": [36, 16, 28, 20]
				}
			]
		},
		{
			"part": "jacket",
			"id": "jacket",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{
					"coordinates": [-4.25, 11.75, -2.25, 8.5, 12.5, 4.5],
					"uvNorth": [20, 36, 28, 48],
					"uvEast": [16, 36, 20, 48],
					"uvSouth": [32, 36, 40, 48],
					"uvWest": [28, 36, 32, 48],
					"uvUp": [28, 36, 20, 32],
					"uvDown": [36, 32, 28, 36]
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{
					"coordinates": [4, 12, -2, 3, 12, 4],
					"uvNorth": [44, 20, 47, 32],
					"uvEast": [40, 20, 44, 32],
					"uvSouth": [51, 20, 54, 32],
					"uvWest": [47, 20, 51, 32],
					"uvUp": [47, 20, 44, 16],
					"uvDown": [50, 16, 47, 20]
				}
			]
		},
		{
			"part": "right_sleeve",
			"id": "right_sleeve",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{
					"coordinates": [3.75, 11.75, -2.25, 3.5, 12.5, 4.5],
					"uvNorth": [44, 36, 47, 48],
					"uvEast": [40, 36, 44, 48],
					"uvSouth": [51, 36, 54, 48],
					"uvWest": [47, 36, 51, 48],
					"uvUp": [47, 36, 44, 32],
					"uvDown": [50, 32, 47, 36]
				}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [5, -22, 0],
			"boxes": [
				{
					"coordinates": [-7, 12, -2, 3, 12, 4],
					"uvNorth": [36, 52, 39, 64],
					"uvEast": [32, 52, 36, 64],
					"uvSouth": [43, 52, 46, 64],
					"uvWest": [39, 52, 43, 64],
					"uvUp": [39, 52, 36, 48],
					"uvDown": [42, 48, 39, 52]
				}
			]
		},
		{
			"part": "left_sleeve",
			"id": "left_sleeve",
			"invertAxis": "xy",
			"translate": [5, -22, 0],
			"boxes": [
				{
					"coordinates": [-7.25, 11.75, -2.25, 3.5, 12.5, 4.5],
					"uvNorth": [52, 52, 55, 64],
					"uvEast": [48, 52, 52, 64],
					"uvSouth": [59, 52, 62, 64],
					"uvWest": [55, 52, 59, 64],
					"uvUp": [55, 52, 52, 48],
					"uvDown": [58, 48, 55, 52]
				}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{"coordinates": [0, 0, -2, 4, 12, 4], "textureOffset": [0, 16]}
			]
		},
		{
			"part": "right_pants",
			"id": "right_pants",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{
					"coordinates": [-0.25, -0.25, -2.25, 4.5, 12.5, 4.5],
					"uvNorth": [4, 36, 8, 48],
					"uvEast": [0, 36, 4, 48],
					"uvSouth": [12, 36, 16, 48],
					"uvWest": [8, 36, 12, 48],
					"uvUp": [8, 36, 4, 32],
					"uvDown": [12, 32, 8, 36]
				}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [2, -12, 0],
			"boxes": [
				{"coordinates": [-4, 0, -2, 4, 12, 4], "textureOffset": [16, 48]}
			]
		},
		{
			"part": "left_pants",
			"id": "left_pants",
			"invertAxis": "xy",
			"translate": [2, -12, 0],
			"boxes": [
				{
					"coordinates": [-4.25, -0.25, -2.25, 4.5, 12.5, 4.5],
					"uvNorth": [4, 52, 8, 64],
					"uvEast": [0, 52, 4, 64],
					"uvSouth": [12, 52, 16, 64],
					"uvWest": [8, 52, 12, 64],
					"uvUp": [8, 52, 4, 48],
					"uvDown": [12, 48, 8, 52]
				}
			]
		},
		{
			"part": "cloak",
			"id": "cloak",
			"invertAxis": "xy",
			"translate": [0, -24, -2],
			"boxes": [
				{
					"coordinates": [-5, 8, 2, 10, 16, 1],
					"uvNorth": [1, 2, 11, 34],
					"uvEast": [0, 2, 1, 34],
					"uvSouth": [12, 2, 22, 34],
					"uvWest": [11, 2, 12, 34],
					"uvUp": [1, 0, 11, 2],
					"uvDown": [11, 0, 21, 2]
				}
			]
		}
	]
}